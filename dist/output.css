/*
! tailwindcss v3.3.5 | MIT License | https://tailwindcss.com
*/

/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: #e5e7eb;
  /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
6. Use the user's configured `sans` font-variation-settings by default.
*/

html {
  line-height: 1.5;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -moz-tab-size: 4;
  /* 3 */
  -o-tab-size: 4;
     tab-size: 4;
  /* 3 */
  font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  /* 4 */
  font-feature-settings: normal;
  /* 5 */
  font-variation-settings: normal;
  /* 6 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0;
  /* 1 */
  line-height: inherit;
  /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
  border-top-width: 1px;
  /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font family by default.
2. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
  border-collapse: collapse;
  /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-feature-settings: inherit;
  /* 1 */
  font-variation-settings: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  font-weight: inherit;
  /* 1 */
  line-height: inherit;
  /* 1 */
  color: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
  padding: 0;
  /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
[type='button'],
[type='reset'],
[type='submit'] {
  -webkit-appearance: button;
  /* 1 */
  background-color: transparent;
  /* 2 */
  background-image: none;
  /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Reset default styling for dialogs.
*/

dialog {
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/

:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */

[hidden] {
  display: none;
}

*, ::before, ::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

.invisible {
  visibility: hidden;
}

.absolute {
  position: absolute;
}

.relative {
  position: relative;
}

.bottom-8 {
  bottom: 2rem;
}

.bottom-\[1750px\] {
  bottom: 1750px;
}

.bottom-\[500px\] {
  bottom: 500px;
}

.bottom-\[600px\] {
  bottom: 600px;
}

.bottom-\[700px\] {
  bottom: 700px;
}

.left-\[300px\] {
  left: 300px;
}

.left-\[40em\] {
  left: 40em;
}

.right-\[9px\] {
  right: 9px;
}

.top-\[-80px\] {
  top: -80px;
}

.top-\[100px\] {
  top: 100px;
}

.top-\[250px\] {
  top: 250px;
}

.top-\[80px\] {
  top: 80px;
}

.ml-\[360px\] {
  margin-left: 360px;
}

.flex {
  display: flex;
}

.h-\[50px\] {
  height: 50px;
}

.w-\[130px\] {
  width: 130px;
}

.w-\[160px\] {
  width: 160px;
}

.w-\[720px\] {
  width: 720px;
}

.max-w-\[900px\] {
  max-width: 900px;
}

.max-w-md {
  max-width: 28rem;
}

.translate-x-\[-100px\] {
  --tw-translate-x: -100px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-x-\[-10px\] {
  --tw-translate-x: -10px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-x-\[-12px\] {
  --tw-translate-x: -12px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-x-\[-20px\] {
  --tw-translate-x: -20px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-x-\[200px\] {
  --tw-translate-x: 200px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-x-\[380px\] {
  --tw-translate-x: 380px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-x-\[48px\] {
  --tw-translate-x: 48px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-x-\[500px\] {
  --tw-translate-x: 500px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-y-\[-10px\] {
  --tw-translate-y: -10px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-y-\[-40px\] {
  --tw-translate-y: -40px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-y-\[-80px\] {
  --tw-translate-y: -80px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-y-\[100px\] {
  --tw-translate-y: 100px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-y-\[500px\] {
  --tw-translate-y: 500px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-y-\[850px\] {
  --tw-translate-y: 850px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.scale-x-\[2\] {
  --tw-scale-x: 2;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.scale-y-\[2\] {
  --tw-scale-y: 2;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.transform {
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.cursor-pointer {
  cursor: pointer;
}

.grid-cols-2 {
  grid-template-columns: repeat(2, minmax(0, 1fr));
}

.flex-wrap {
  flex-wrap: wrap;
}

.space-x-\[100px\] > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(100px * var(--tw-space-x-reverse));
  margin-left: calc(100px * calc(1 - var(--tw-space-x-reverse)));
}

.rounded-full {
  border-radius: 9999px;
}

.from-slate-400 {
  --tw-gradient-from: #94a3b8 var(--tw-gradient-from-position);
  --tw-gradient-to: rgb(148 163 184 / 0) var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}

.text-2xl {
  font-size: 1.5rem;
  line-height: 2rem;
}

.text-3xl {
  font-size: 1.875rem;
  line-height: 2.25rem;
}

.text-4xl {
  font-size: 2.25rem;
  line-height: 2.5rem;
}

.text-\[10px\] {
  font-size: 10px;
}

.text-xl {
  font-size: 1.25rem;
  line-height: 1.75rem;
}

.underline {
  text-decoration-line: underline;
}

.decoration-yellow-300 {
  text-decoration-color: #fde047;
}

.decoration-yellow-400 {
  text-decoration-color: #facc15;
}

.decoration-8 {
  text-decoration-thickness: 8px;
}

.grayscale {
  --tw-grayscale: grayscale(100%);
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

*{
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

.nav-link.visible {
  top: 0;
  transition: top 0.3s ease;
}

body{
  overflow-x: hidden;
  overflow-y: scroll;
  width: 100%;
  height: 100vh;
  width:-webkit-fill-available;
}

@keyframes animate {
  0%{
    width: 0;
  }

  70%{
    width: 100%;
  }
}

header{
  display: flex;
  justify-content: center;
  position: sticky;
  top: 0;
  height: 2em;
  left: 250px;
  padding: 2em;
  justify-content: flex-end;
  background-color:white;
  font-size: 1em;
  z-index: 1;
  font-family: 'Caveat', cursive;
  font-family: 'Comic Neue', cursive;
  font-family: 'Gochi Hand', cursive;
  font-family: 'Inconsolata', monospace;
  font-family: 'Indie Flower', cursive;
  font-family: 'Playfair Display', serif;
  font-family: 'Roboto', sans-serif;
  font-family: 'Source Code Pro', monospace;
  font-family: 'Tinos', serif;
}

header .nav-links ul{
  display: flex;
  list-style: none;
  -moz-column-gap: 3em;
       column-gap: 3em;
}

.nav-links  a{
  text-decoration: none;
  position: relative;
  color: black;
}

.nav-links a::after{
  content: "";
  bottom: 0;
  left: 0;
  width: 0;
  position: absolute;
  height: 2px;
  border: 1px solid;
  background-color: white;
  transition: 3s;
}

.nav-links a:hover::after{
  width: 100%;
}

h2{
  margin-left: 3em;
  font-size: 0.4em;
  -webkit-text-stroke: 2px  black;
  position: relative;
  left: 28em;
  top: 10em;
}

@keyframes border {
  50%{
    border-radius: 3em 5em 6em 5em;
  }
}

.container1{
  height: 60em;
  max-width: 150em;
}

.container1 .inner-container{
  display: flex;
  justify-content: center;
  transform: translateY(150px);
  gap: 15em;
}

.image1 img{
  -webkit-clip-path: circle();
          clip-path: circle();
  filter: grayscale();
}

.container2{
  display: flex;
  justify-content: center;
  gap: 150px;
  font-family: 'Caveat', cursive;
  font-family: 'Comic Neue', cursive;
  font-family: 'Gochi Hand', cursive;
  font-family: 'Inconsolata', monospace;
  font-family: 'Playfair Display', serif;
  font-family: 'Roboto', sans-serif;
  font-family: 'Source Code Pro', monospace;
}

.container2 img{
  width: 480px;
  aspect-ratio: 30/20;
  -webkit-clip-path: circle();
          clip-path: circle();
  filter: grayscale(200%);
  height: 390px;
}

.container2-content > p{
  width:600px ;
}

.container2-content1{
  transform: translateY(10px);
}

.container2-content1 span{
  margin-left: 25px;
  font-weight: bold;
}

.container3 .text{
  text-align: center;
  width: 650px;
  margin: auto;
}

.container3{
  position: relative;
  top: 200px;
  width: 120em;
  font-family: 'Caveat', cursive;
  font-family: 'Comic Neue', cursive;
  font-family: 'Gochi Hand', cursive;
  font-family: 'Inconsolata', monospace;
  font-family: 'Indie Flower', cursive;
  font-family: 'Kalam', cursive;
  font-family: 'Playfair Display', serif;
  font-family: 'Roboto', sans-serif;
  font-family: 'Source Code Pro', monospace;
  font-family: 'Tinos', serif;
}

.container3-content{
  display: flex;
  justify-content: center;
  gap: 180px;
  position: relative;
  top: 80px;
}

.image-animation {
  animation-name: animateImage;
  animation-duration: 2s;
  animation-timing-function: ease-in-out;
}

.container3-animation{
  animation-name: animateAvatar;
  animation-duration: 2180ms;
  animation-timing-function: ease-in;
}

@keyframes animateAvatar {
  from{
    transform: translateY(-9rem) ;
    opacity: 0;
  }

  to{
    transform: translateY(0rem) ;
    opacity: 1;
  }
}

@keyframes animateImage {
  from{
    opacity: 0;
    transform:  scale(0);
  }

  to{
    opacity: 1;
    transform: scale(1);
  }
}

.container4{
  display: flex;
  margin-top: 1%;
  max-height: 900px;
  max-width: 1000px;
  justify-content: right;
  font-family: 'Caveat', cursive;
  font-family: 'Comic Neue', cursive;
  font-family: 'Gochi Hand', cursive;
  font-family: 'Inconsolata', monospace;
  font-family: 'Indie Flower', cursive;
  font-family: 'Kalam', cursive;
  font-family: 'Playfair Display', serif;
  font-family: 'Roboto', sans-serif;
  font-family: 'Source Code Pro', monospace;
  font-family: 'Tinos', serif;
  border-radius: 2px solid;
}

.container4 .programme{
  display: grid;
  grid-template-columns: 20px 20px ;
  -moz-column-gap: 700px;
       column-gap: 700px;
  row-gap: 20px;
  text-align: center;
  height: 400px;
  width: 180em;
  background-color: rgba(128, 128, 128, 0.185);
  margin-top: 150px;
}

.programming:nth-child(3){
  transform: translateX(100px);
}

@media  (max-width:680px){
  #programming1::after{
    max-width: 100px;
  }

  #programming2::after{
    max-width: 100px;
  }

  #programming3::after{
    max-width: 100px;
  }

  #programming4::after{
    max-width: 100px;
  }

  #programming5::after{
    max-width: 100px;
  }

  #programming6::after{
    max-width: 100px;
  }

  .container4 .programme{
    display: grid;
    -moz-column-gap: 430px;
         column-gap: 430px;
  }
}

.programming:nth-child(1){
  transform: translateX(100px);
  margin-top: 40px;
}

.programming:nth-child(5){
  transform: translateX(100px);
}

.programming:nth-child(2){
  transform: translateX(-80px);
  margin-top: 40px;
}

.programming:nth-child(4){
  transform: translateX(-80px);
}

.programming:nth-child(6){
  transform: translateX(-80px);
}

#programming1::after{
  content: '';
  position: absolute;
  background: transparent;
  width: 180px;
  height: 10px;
  animation-name: animation1;
  animation-timing-function: ease-in-out;
  animation-duration: 4s;
  animation-iteration-count: infinite;
  bottom: 48px;
}

@keyframes animation1{
  from{
    background: linear-gradient(to right, yellow, white 8%);
  }

  to{
    background: linear-gradient(to right, yellow 80%, white 20%);
  }
}

#programming2::after{
  content: '';
  position: absolute;
  background: transparent;
  width: 180px;
  height: 10px;
  animation-name: animation2;
  animation-timing-function: ease-in-out;
  animation-duration: 4s;
  animation-iteration-count: infinite;
  bottom: 48px;
  right: 1px;
}

@keyframes animation2{
  from{
    background: linear-gradient(to right, yellow 20%, white 10%);
  }

  to{
    background: linear-gradient(to right, yellow 90%, white 32%);
  }
}

#programming3::after{
  content: '';
  position: absolute;
  background: transparent;
  width: 180px;
  height: 10px;
  animation-name: animation3;
  animation-timing-function: ease-in-out;
  animation-duration: 4s;
  animation-iteration-count: infinite;
  bottom: 89px;
}

@keyframes animation3{
  from{
    background: linear-gradient(to right, yellow 10%, white 10%);
  }

  to{
    background: linear-gradient(to right, yellow 60%, white 32%);
  }
}

#programming4::after{
  content: '';
  position: absolute;
  background: transparent;
  width: 180px;
  height: 10px;
  animation-name: animation4;
  animation-timing-function: ease-in-out;
  animation-duration: 4s;
  animation-iteration-count: infinite;
  bottom: 86px;
  right: 1px;
}

@keyframes animation4{
  from{
    background: linear-gradient(to right, yellow 10%, white 10%);
  }

  to{
    background: linear-gradient(to right, yellow 60%, white 32%);
  }
}

#programming5::after{
  content: '';
  position: absolute;
  background: transparent;
  width: 180px;
  height: 10px;
  animation-name: animation5;
  animation-timing-function: ease-in-out;
  animation-duration: 4s;
  animation-iteration-count: infinite;
  bottom: 100px;
}

@keyframes animation5{
  from{
    background: linear-gradient(to right, yellow 5%, white 10%);
  }

  to{
    background: linear-gradient(to right, yellow 50%, white 32%);
  }
}

#programming6::after{
  content: '';
  position: absolute;
  background: transparent;
  width: 180px;
  height: 10px;
  animation-name: animation6;
  animation-timing-function: ease-in-out;
  animation-duration: 4s;
  animation-iteration-count: infinite;
  bottom: 100px;
  right: 1px;
}

@keyframes animation6{
  from{
    background: linear-gradient(to right, yellow 20%, white 10%);
  }

  to{
    background: linear-gradient(to right, yellow 30%, white 32%);
  }
}

.container5{
  position: relative;
  top: 30em;
  max-width: 1000px;
  height: 100%;
  left: 15em;
}

.project-image1 img{
  width: 380px;
  height: 350px;
  border-radius: 8em;
}

.project-image2 {
  position: relative;
  left: 1000px;
  bottom: 530px;
  width: 510px;
  border-radius: 50px;
  height: 480px;
  padding-left: 59px;
  padding-top: 23px;
}

.project-image2 img{
  width: 380px;
  height: 350px;
  border-radius: 8em;
}

.project-image1{
  border: 2px solid;
  width: 510px;
  border-radius: 50px;
  height: 480px;
  padding-left: 59px;
  padding-top: 23px;
  margin-top: 90px;
  position: relative;
  left: 380px;
  background-color: grey;
  box-shadow: 7px 20px 10px  grey;
}

.project-content1{
  transform: translateX(200px);
  position: relative;
  bottom: 90px;
  font-size: 20px;
  font-weight: 700;
}

.project-content2{
  position: absolute;
  bottom: 132px;
  left: 120px;
  font-size: 20px;
  font-weight: 700;
}

.btn{
  position: relative;
  left: 110px;
  bottom: 80px;
  height: 40px;
  text-align: center;
  border-radius: 30px;
  box-shadow: 3px 5px;
}

.p-tag{
  text-align: center;
}

.container6{
  position: relative;
  top: 700px;
  left: 700px;
  font-family: 'Caveat', cursive;
  font-family: 'Comic Neue', cursive;
  font-family: 'Gochi Hand', cursive;
  font-family: 'Inconsolata', monospace;
  font-family: 'Indie Flower', cursive;
  font-family: 'Kalam', cursive;
  font-family: 'Permanent Marker', cursive;
  font-family: 'Playfair Display', serif;
  font-family: 'Roboto', sans-serif;
  font-family: 'Source Code Pro', monospace;
  font-family: 'Tinos', serif;
}

/* 


.container6 h6{
    font-size: 35px;
} */

.container6 > p{
  transform: translateX(-60px);
  margin-top: 20px;
}

.container7{
  position: relative;
  top: 1000px;
  width: 1700px;
  height: 700px;
  left: 59px;
  margin: 0 auto;
}

.contact{
  position: relative;
  bottom: 500px;
  width: 780px;
  height: 430px;
  border: 2px solid;
  left: 500px;
  background-color: white;
  z-index: 3;
  border-radius: 50px;
}

.my-info{
  display: flex;
  margin-top: 40px;
}

.addres{
  display: flex;
  flex-direction: column;
  gap: 1em;
}

.email{
  width: 60px;
  margin-left: 19px;
}

#input2{
  margin-top: 65px;
  border-top-color: transparent;
  border-left-color: transparent;
  border-right-color: transparent;
}

#input2:focus{
  outline: none;
  box-shadow: 3px 4px;
}

#input1{
  outline: none;
  border-top-color: transparent;
  border-left-color: transparent;
  border-right-color: transparent;
}

#input1:focus{
  box-shadow: 3px 4px;
}

#input3{
  margin-top: 94px;
  height: 94px;
  width: 250px;
  border-top-color: transparent;
  border-left-color: transparent;
  border-right-color: transparent;
}

#input3:focus{
  outline: none;
  box-shadow: 3px 4px;
}

#submit{
  margin-top: 24px;
  width: 70px;
  text-align: center;
  height: 40px;
  border-radius: 20px;
  background: linear-gradient(to right, yellow 50%, white);
  color: black;
}

@media not all and (min-width: 640px) {
  .max-sm\:invisible {
    visibility: hidden;
  }

  .max-sm\:absolute {
    position: absolute;
  }

  .max-sm\:relative {
    position: relative;
  }

  .max-sm\:bottom-\[1500px\] {
    bottom: 1500px;
  }

  .max-sm\:bottom-\[800px\] {
    bottom: 800px;
  }

  .max-sm\:left-\[180px\] {
    left: 180px;
  }

  .max-sm\:left-\[60px\] {
    left: 60px;
  }

  .max-sm\:right-\[120px\] {
    right: 120px;
  }

  .max-sm\:right-\[500px\] {
    right: 500px;
  }

  .max-sm\:right-\[\] {
    right: ;
  }

  .max-sm\:top-\[-600\%\] {
    top: -600%;
  }

  .max-sm\:top-\[180px\] {
    top: 180px;
  }

  .max-sm\:mb-\[300px\] {
    margin-bottom: 300px;
  }

  .max-sm\:mb-\[500px\] {
    margin-bottom: 500px;
  }

  .max-sm\:ml-64 {
    margin-left: 16rem;
  }

  .max-sm\:ml-\[150px\] {
    margin-left: 150px;
  }

  .max-sm\:mr-\[20px\] {
    margin-right: 20px;
  }

  .max-sm\:ml-60 {
    margin-left: 15rem;
  }

  .max-sm\:ml-6 {
    margin-left: 1.5rem;
  }

  .max-sm\:ml-72 {
    margin-left: 18rem;
  }

  .max-sm\:flex {
    display: flex;
  }

  .max-sm\:grid {
    display: grid;
  }

  .max-sm\:h-\[100px\] {
    height: 100px;
  }

  .max-sm\:h-\[150px\] {
    height: 150px;
  }

  .max-sm\:h-\[35px\] {
    height: 35px;
  }

  .max-sm\:max-h-\[200px\] {
    max-height: 200px;
  }

  .max-sm\:max-h-\[300px\] {
    max-height: 300px;
  }

  .max-sm\:max-h-\[450px\] {
    max-height: 450px;
  }

  .max-sm\:max-h-\[500px\] {
    max-height: 500px;
  }

  .max-sm\:max-h-\[700px\] {
    max-height: 700px;
  }

  .max-sm\:max-h-\[\] {
    max-height: ;
  }

  .max-sm\:min-h-\[40vh\] {
    min-height: 40vh;
  }

  .max-sm\:w-\[100\%\] {
    width: 100%;
  }

  .max-sm\:w-\[100px\] {
    width: 100px;
  }

  .max-sm\:w-\[650px\] {
    width: 650px;
  }

  .max-sm\:max-w-\[100px\] {
    max-width: 100px;
  }

  .max-sm\:max-w-\[150px\] {
    max-width: 150px;
  }

  .max-sm\:max-w-\[180px\] {
    max-width: 180px;
  }

  .max-sm\:max-w-\[200px\] {
    max-width: 200px;
  }

  .max-sm\:max-w-\[25px\] {
    max-width: 25px;
  }

  .max-sm\:max-w-\[300px\] {
    max-width: 300px;
  }

  .max-sm\:max-w-\[30px\] {
    max-width: 30px;
  }

  .max-sm\:max-w-\[350px\] {
    max-width: 350px;
  }

  .max-sm\:max-w-\[450px\] {
    max-width: 450px;
  }

  .max-sm\:max-w-\[500px\] {
    max-width: 500px;
  }

  .max-sm\:max-w-\[50px\] {
    max-width: 50px;
  }

  .max-sm\:max-w-\[600px\] {
    max-width: 600px;
  }

  .max-sm\:max-w-\[650px\] {
    max-width: 650px;
  }

  .max-sm\:max-w-\[800px\] {
    max-width: 800px;
  }

  .max-sm\:max-w-\[900px\] {
    max-width: 900px;
  }

  .max-sm\:max-w-xs {
    max-width: 20rem;
  }

  .max-sm\:flex-shrink {
    flex-shrink: 1;
  }

  .max-sm\:flex-shrink-\[5\] {
    flex-shrink: 5;
  }

  .max-sm\:translate-x-5 {
    --tw-translate-x: 1.25rem;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  .max-sm\:translate-x-\[-100px\] {
    --tw-translate-x: -100px;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  .max-sm\:translate-x-\[-10px\] {
    --tw-translate-x: -10px;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  .max-sm\:translate-x-\[-130px\] {
    --tw-translate-x: -130px;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  .max-sm\:translate-x-\[-150px\] {
    --tw-translate-x: -150px;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  .max-sm\:translate-x-\[-400px\] {
    --tw-translate-x: -400px;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  .max-sm\:translate-x-\[-500px\] {
    --tw-translate-x: -500px;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  .max-sm\:translate-x-\[-50px\] {
    --tw-translate-x: -50px;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  .max-sm\:translate-x-\[-600px\] {
    --tw-translate-x: -600px;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  .max-sm\:translate-x-\[-610px\] {
    --tw-translate-x: -610px;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  .max-sm\:translate-x-\[160px\] {
    --tw-translate-x: 160px;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  .max-sm\:translate-x-\[170px\] {
    --tw-translate-x: 170px;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  .max-sm\:translate-x-\[210px\] {
    --tw-translate-x: 210px;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  .max-sm\:translate-x-\[300px\] {
    --tw-translate-x: 300px;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  .max-sm\:translate-x-\[490px\] {
    --tw-translate-x: 490px;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  .max-sm\:translate-x-\[500px\] {
    --tw-translate-x: 500px;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  .max-sm\:translate-x-\[px\] {
    --tw-translate-x: px;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  .max-sm\:translate-y-\[-10px\] {
    --tw-translate-y: -10px;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  .max-sm\:translate-y-\[-20px\] {
    --tw-translate-y: -20px;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  .max-sm\:translate-y-\[-500px\] {
    --tw-translate-y: -500px;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  .max-sm\:translate-y-\[-60px\] {
    --tw-translate-y: -60px;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  .max-sm\:translate-y-\[150px\] {
    --tw-translate-y: 150px;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  .max-sm\:translate-y-\[500px\] {
    --tw-translate-y: 500px;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  .max-sm\:translate-y-\[\] {
    --tw-translate-y: ;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  .max-sm\:translate-x-\[110px\] {
    --tw-translate-x: 110px;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  .max-sm\:translate-x-0 {
    --tw-translate-x: 0px;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  .max-sm\:translate-x-\[\] {
    --tw-translate-x: ;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  .max-sm\:translate-x-\[50\] {
    --tw-translate-x: 50;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  .max-sm\:translate-x-\[50px\] {
    --tw-translate-x: 50px;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  .max-sm\:translate-x-\[90px\] {
    --tw-translate-x: 90px;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  .max-sm\:scale-x-\[0\.5\] {
    --tw-scale-x: 0.5;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  .max-sm\:scale-y-\[0\.5\] {
    --tw-scale-y: 0.5;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  .max-sm\:flex-col {
    flex-direction: column;
  }

  .max-sm\:flex-wrap {
    flex-wrap: wrap;
  }

  .max-sm\:justify-start {
    justify-content: flex-start;
  }

  .max-sm\:justify-center {
    justify-content: center;
  }

  .max-sm\:gap-\[50px\] {
    gap: 50px;
  }

  .max-sm\:space-x-\[100px\] > :not([hidden]) ~ :not([hidden]) {
    --tw-space-x-reverse: 0;
    margin-right: calc(100px * var(--tw-space-x-reverse));
    margin-left: calc(100px * calc(1 - var(--tw-space-x-reverse)));
  }

  .max-sm\:whitespace-pre {
    white-space: pre;
  }

  .max-sm\:rounded-2xl {
    border-radius: 1rem;
  }

  .max-sm\:rounded-full {
    border-radius: 9999px;
  }

  .max-sm\:bg-gray-800 {
    --tw-bg-opacity: 1;
    background-color: rgb(31 41 55 / var(--tw-bg-opacity));
  }

  .max-sm\:bg-gradient-to-r {
    background-image: linear-gradient(to right, var(--tw-gradient-stops));
  }

  .max-sm\:p-10 {
    padding: 2.5rem;
  }

  .max-sm\:p-\[20px\] {
    padding: 20px;
  }

  .max-sm\:text-\[10px\] {
    font-size: 10px;
  }

  .max-sm\:text-lg {
    font-size: 1.125rem;
    line-height: 1.75rem;
  }

  .max-sm\:text-sm {
    font-size: 0.875rem;
    line-height: 1.25rem;
  }

  .max-sm\:text-xs {
    font-size: 0.75rem;
    line-height: 1rem;
  }

  .max-sm\:font-bold {
    font-weight: 700;
  }

  .max-sm\:font-extralight {
    font-weight: 200;
  }

  @media (min-width: 640px) {
    .max-sm\:sm\:flex {
      display: flex;
    }
  }
}

@media (min-width: 768px) {
  .md\:hidden {
    display: none;
  }
}
















   
   
   
   













































































